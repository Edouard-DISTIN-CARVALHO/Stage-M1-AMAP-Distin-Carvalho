Base=.5,
p=3,
A = 1), control=list(maxiter=5000))
predNLS_lea_ct_bi<-predict(NLS_lea_ct_bi,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
lines(x=ListDate,y=predNLS_lea_ct_bi,col="#FF007F")
# Twigs
with(data=dados_ct_bi,plot(x=date,y=twigs,main = "control_bi twigs"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = 0,
c = 100,
Base=.1,
p=2,
A = .1),col="brown", lty ="dashed")
dados_ct_bi$day<-as.numeric(dados_ct_bi$date-min(dados_ct_bi$date,na.rm=TRUE))
NLS_twg_ct_bi<-nls(data=dados_ct_bi, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = 0,
c = 100,
Base=.1,
p=2,
A = .1), control=list(maxiter=5000))
predNLS_twg_ct_bi<-predict(NLS_twg_ct_bi,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
lines(x=ListDate,y=predNLS_twg_ct_bi,col="cyan")
###### Triennial Control #####
dados_ct_tri <- Mean[Mean$fire_regime == "control_tri",]
# Total_litterfall
with(data=dados_ct_tri,plot(x=date,y=total,main = "control_tri Total_litterfall"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = 0,
c = 100,
Base=.5,
p=3,
A= 1),
col="red", lty="dashed")
dados_ct_tri$day<-as.numeric(dados_ct_tri$date-min(dados_ct_tri$date,na.rm=TRUE))
NLS_tot_ct_tri<-nls(data=dados_ct_tri, formula =
total~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c( a = 365,
b = 0,
c = 100,
Base=.5,
p=3,
A= 1), control=list(maxiter=5000))
predNLS_tot_ct_tri<-predict(NLS_tot_ct_tri,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
lines(x=ListDate,y=predNLS_tot_ct_tri,col="cyan")
# Leaves
with(data=dados_ct_tri,plot(x=date,y=leaves,main = "control_tri Leaves"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = 0,
c = 100,
Base=.4,
p=3,
A = .7),col="darkgreen", lty="dashed")
dados_ct_tri$day<-as.numeric(dados_ct_tri$date-min(dados_ct_tri$date,na.rm=TRUE))
NLS_lea_ct_tri<-nls(data=dados_ct_tri, formula =
leaves~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c( a = 365,
b = 0,
c = 100,
Base=.4,
p=3,
A = .7), control=list(maxiter=5000))
predNLS_lea_ct_tri<-predict(NLS_lea_ct_tri,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
lines(x=ListDate,y=predNLS_lea_ct_tri,col="#FF007F")
# Twigs
with(data=dados_ct_tri,plot(x=date,y=twigs,main = "control_tri twigs"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 400,
b = 0,
c = 100,
Base=0.01,
p=2,
A = 0.1),col="brown", lty ="dashed")
dados_ct_tri$day<-as.numeric(dados_ct_tri$date-min(dados_ct_tri$date,na.rm=TRUE))
NLS_twg_ct_tri<-nls(data=dados_ct_tri, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 400,
b = 0,
c = 100,
Base=0.01,
p=2,
A = 0.1), control=list(maxiter=5000))
predNLS_twg_ct_tri<-predict(NLS_twg_ct_tri,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
lines(x=ListDate,y=predNLS_twg_ct_tri,col="cyan")
###### Control #####
dados_ct_comp <- Mean %>%
filter(fire_regime %in% c("control_an","control_bi","control_tri"))
# Annual
dados_an$day<-as.numeric(dados_an$date-min(dados_an$date,na.rm=TRUE))
NLS_lea_an<-nls(data=dados_an, formula =
leaves~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = 0.0001,
c = 120,
Base=.5,
p=3,
A = 0.8), control=list(maxiter=5000))
predNLS_lea_an<-predict(NLS_lea_an,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Annual
NLS_lea_an<-nls(data=dados_an, formula =
leaves~myFunc(x=day, a = a, b = b, c = c,
Base=Base, p=p, A=A),
start=c(a = 365,
b = 0.0001,
c = 120,
Base=.5,
p=3,
A = 0.8), control=list(maxiter=5000))
predNLS_lea_an<-predict(NLS_lea_an,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
predNLS_lea_an<-predict(NLS_lea_an,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Biannual
NLS_lea_bi<-nls(data=dados_bi, formula =
leaves~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = .0005,
c = 100,
Base=.3,
p=3,
A = 1),
control = nls.control(minFactor = 1e-10, maxiter = 5000))
predNLS_lea_bi<-predict(NLS_lea_bi,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Triennial
NLS_lea_tri<-nls(data=dados_tri, formula =
leaves~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = .001,
c = 100,
Base=.2,
p=3, A = 1), control=list(maxiter=5000))
predNLS_lea_tri<-predict(NLS_lea_tri,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Annual Control
NLS_lea_ct_an<-nls(data=dados_ct_an, formula =
leaves~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = 0,
c = 100,
Base=0.5,
p=3,
A = 1), control=list(maxiter=5000))
predNLS_lea_ct_an<-predict(NLS_lea_ct_an,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Biennial control
NLS_lea_ct_bi<-nls(data=dados_ct_bi, formula =
leaves~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = 0,
c = 100,
Base=.5,
p=3,
A = 1), control=list(maxiter=5000))
predNLS_lea_ct_bi<-predict(NLS_lea_ct_bi,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Triennial Control
NLS_lea_ct_tri<-nls(data=dados_ct_tri, formula =
leaves~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c( a = 365,
b = 0,
c = 100,
Base=.4,
p=3,
A = .7), control=list(maxiter=5000))
predNLS_lea_ct_tri<-predict(NLS_lea_ct_tri,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Control
with(data=dados_ct_comp, plot(x=date, y = total, main = "Fire regime Control Leaves",
col =c("control_an" = "red","control_bi"="green","control_tri"="blue"),
pch = c("control_an"=1,"control_bi"=2,"control_tri"=3), cex = 0.5))
lines(x=ListDate,y=predNLS_lea_ct_an,col = "red", lwd=1, lty = 2)
lines(x=ListDate,y=predNLS_lea_ct_bi,col = "green", lwd=1, lty = 2)
lines(x=ListDate,y=predNLS_lea_ct_tri,col = "blue", lwd=1, lty = 2)
legend("topright", legend = c("Control_an", "Control_bi", "Control_tri",
"Control_an Prediction", "Control_bi Prediction","Control_tri Prediction"),
pch = c(1, 2, 3, NA , NA, NA), col = c("red", "green", "blue", "red", "green", "blue"),
lty = c(NA , NA, NA, 2, 2, 2), title = "Fire Regime",cex = 0.5)
# Fire Regime
with(data=dados_comp, plot(x=date, y = total, main = "Fire regime Leaves", col =c("annual" = "red","biennial"="green","triennial"="blue"), pch = c("annual"=1,"biennial"=2,"triennial"=3), cex = 0.5))
lines(x=ListDate,y=predNLS_lea_an,col = "red", lwd=1, lty = 1)
lines(x=ListDate,y=predNLS_lea_bi,col = "green", lwd=1, lty = 1)
lines(x=ListDate,y=predNLS_lea_tri,col = "blue", lwd=1, lty = 1)
legend("topright", legend = c("Annual", "Biennial", "Triennial",
"Annual Prediction", "Biennial Prediction","Triennial Prediction"),
pch = c(1, 2, 3, NA , NA, NA), col = c("red", "green", "blue", "red", "green", "blue"),
lty = c(NA , NA, NA, 1, 1, 1), title = "Fire Regime",cex = 0.5)
# Annual
NLS_twg_an<-nls(data=dados_an, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = .0012,
c = 140,
Base=0.1,
p=2,
A = .7), control=list(maxiter=5000))
predNLS_twg_an<-predict(NLS_twg_an,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Biennial
NLS_twg_bi<-nls(data=dados_bi, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = .0001,
c = 120,
Base=.05,
p=3,
A = 0.1),
control = nls.control(minFactor = 1e-10, maxiter = 10000))
predNLS_twg_bi<-predict(NLS_twg_bi,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Triennial
NLS_twg_tri<-nls(data=dados_tri, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 360,
b = .0001,
c = 100,
Base=0.01,
p=3,
A = 0.1), control=list(maxiter=5000))
predNLS_twg_tri<-predict(NLS_twg_tri,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Control_an
NLS_twg_ct_an<-nls(data=dados_ct_an, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = 0,
c = 100,
Base=0.1,
p=2,
A = .5), control=list(maxiter=5000))
predNLS_twg_ct_an<-predict(NLS_twg_ct_an,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Control_bi
NLS_twg_ct_bi<-nls(data=dados_ct_bi, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = 0,
c = 100,
Base=.1,
p=2,
A = .1), control=list(maxiter=5000))
predNLS_twg_ct_bi<-predict(NLS_twg_ct_bi,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Control_tri
NLS_twg_ct_tri<-nls(data=dados_ct_tri, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 400,
b = 0,
c = 100,
Base=0.01,
p=2,
A = 0.1), control=list(maxiter=5000))
predNLS_twg_ct_tri<-predict(NLS_twg_ct_tri,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Control
with(data=dados_ct_comp, plot(x=date, y = total, main = "Fire regime Control Twigs",
col =c("control_an" = "red","control_bi"="green","control_tri"="blue"),
pch = c("control_an"=1,"control_bi"=2,"control_tri"=3), cex = 0.5))
lines(x=ListDate,y=predNLS_twg_ct_an,col = "red", lwd=1, lty = 2)
lines(x=ListDate,y=predNLS_twg_ct_bi,col = "green", lwd=1, lty = 2)
lines(x=ListDate,y=predNLS_twg_ct_tri,col = "blue", lwd=1, lty = 2)
legend("topright", legend = c("Control_an", "Control_bi", "Control_tri",
"Control_an Prediction", "Control_bi Prediction","Control_tri Prediction"),
pch = c(1, 2, 3, NA , NA, NA), col = c("red", "green", "blue", "red", "green", "blue"),
lty = c(NA , NA, NA, 2, 2, 2), title = "Fire Regime",cex = 0.5)
# Fire Regime
with(data=dados_comp, plot(x=date, y = total, main = "Fire regime Twigs", col =c("annual" = "red","biennial"="green","triennial"="blue"), pch = c("annual"=1,"biennial"=2,"triennial"=3), cex = 0.5))
lines(x=ListDate,y=predNLS_twg_an,col = "red", lwd=1, lty = 1)
lines(x=ListDate,y=predNLS_twg_bi,col = "green", lwd=1, lty = 1)
lines(x=ListDate,y=predNLS_twg_tri,col = "blue", lwd=1, lty = 1)
legend("topright", legend = c("Annual", "Biennial", "Triennial",
"Annual Prediction", "Biennial Prediction","Triennial Prediction"),
pch = c(1, 2, 3, NA , NA, NA), col = c("red", "green", "blue", "red", "green", "blue"),
lty = c(NA , NA, NA, 1, 1, 1), title = "Fire Regime",cex = 0.5)
# Annual
NLS_lea_an<-nls(data=dados_an, formula =
leaves~myFunc(x=day, a = a, b = b, c = c,
Base=Base, p=p, A=A),
start=c(a = 365,
b = 0.0001,
c = 120,
Base=.5,
p=3,
A = 0.8), control=list(maxiter=5000))
predNLS_lea_an<-predict(NLS_lea_an,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
predNLS_lea_an<-predict(NLS_lea_an,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Biannual
NLS_lea_bi<-nls(data=dados_bi, formula =
leaves~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = .0005,
c = 100,
Base=.3,
p=3,
A = 1),
control = nls.control(minFactor = 1e-10, maxiter = 5000))
predNLS_lea_bi<-predict(NLS_lea_bi,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Triennial
NLS_lea_tri<-nls(data=dados_tri, formula =
leaves~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = .001,
c = 100,
Base=.2,
p=3, A = 1), control=list(maxiter=5000))
predNLS_lea_tri<-predict(NLS_lea_tri,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Annual Control
NLS_lea_ct_an<-nls(data=dados_ct_an, formula =
leaves~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = 0,
c = 100,
Base=0.5,
p=3,
A = 1), control=list(maxiter=5000))
predNLS_lea_ct_an<-predict(NLS_lea_ct_an,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Biennial control
NLS_lea_ct_bi<-nls(data=dados_ct_bi, formula =
leaves~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = 0,
c = 100,
Base=.5,
p=3,
A = 1), control=list(maxiter=5000))
predNLS_lea_ct_bi<-predict(NLS_lea_ct_bi,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Triennial Control
NLS_lea_ct_tri<-nls(data=dados_ct_tri, formula =
leaves~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c( a = 365,
b = 0,
c = 100,
Base=.4,
p=3,
A = .7), control=list(maxiter=5000))
predNLS_lea_ct_tri<-predict(NLS_lea_ct_tri,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Control
with(data=dados_ct_comp, plot(x=date, y = total, main = "Fire regime Control Leaves",
col =c("control_an" = "red","control_bi"="green","control_tri"="blue"),
pch = c("control_an"=1,"control_bi"=2,"control_tri"=3), cex = 0.5))
lines(x=ListDate,y=predNLS_lea_ct_an,col = "red", lwd=1, lty = 2)
lines(x=ListDate,y=predNLS_lea_ct_bi,col = "green", lwd=1, lty = 2)
lines(x=ListDate,y=predNLS_lea_ct_tri,col = "blue", lwd=1, lty = 2)
legend("topright", legend = c("Control_an", "Control_bi", "Control_tri",
"Control_an Prediction", "Control_bi Prediction","Control_tri Prediction"),
pch = c(1, 2, 3, NA , NA, NA), col = c("red", "green", "blue", "red", "green", "blue"),
lty = c(NA , NA, NA, 2, 2, 2), title = "Fire Regime",cex = 0.5)
# Fire Regime
with(data=dados_comp, plot(x=date, y = total, main = "Fire regime Leaves", col =c("annual" = "red","biennial"="green","triennial"="blue"), pch = c("annual"=1,"biennial"=2,"triennial"=3), cex = 0.5))
lines(x=ListDate,y=predNLS_lea_an,col = "red", lwd=1, lty = 1)
lines(x=ListDate,y=predNLS_lea_bi,col = "green", lwd=1, lty = 1)
lines(x=ListDate,y=predNLS_lea_tri,col = "blue", lwd=1, lty = 1)
legend("topright", legend = c("Annual", "Biennial", "Triennial",
"Annual Prediction", "Biennial Prediction","Triennial Prediction"),
pch = c(1, 2, 3, NA , NA, NA), col = c("red", "green", "blue", "red", "green", "blue"),
lty = c(NA , NA, NA, 1, 1, 1), title = "Fire Regime",cex = 0.5)
# Extraction des paramètres des modèles
coef_lea_an <- coef(NLS_lea_an)
coef_lea_bi <- coef(NLS_lea_bi)
coef_lea_tri <- coef(NLS_lea_tri)
coef_lea_ct_an <- coef(NLS_lea_ct_an)
coef_lea_ct_bi <- coef(NLS_lea_ct_bi)
coef_lea_ct_tri <- coef(NLS_lea_ct_tri)
# Création d'un nouveau dataframe
coef_lea <- data.frame(
Modele = c("NLS_lea_an", "NLS_lea_bi", "NLS_lea_tri",
"NLS_lea_ct_an", "NLS_lea_ct_bi", "NLS_lea_ct_tri"),
a = c(coef_lea_an["a"], coef_lea_bi["a"], coef_lea_tri["a"],
coef_lea_ct_an["a"], coef_lea_ct_bi["a"], coef_lea_ct_tri["a"]),
b = c(coef_lea_an["b"], coef_lea_bi["b"], coef_lea_tri["b"],
coef_lea_ct_an["b"], coef_lea_ct_bi["b"], coef_lea_ct_tri["b"]),
c = c(coef_lea_an["c"], coef_lea_bi["c"], coef_lea_tri["c"]),
Base = c(coef_lea_an["Base"], coef_lea_bi["Base"], coef_lea_tri["Base"],
coef_lea_ct_an["Base"], coef_lea_ct_bi["Base"], coef_lea_ct_tri["Base"]),
p = c(coef_lea_an["p"], coef_lea_bi["p"], coef_lea_tri["p"],
coef_lea_ct_an["p"], coef_lea_ct_bi["p"], coef_lea_ct_tri["p"]),
A = c(coef_lea_an["A"], coef_lea_bi["A"], coef_lea_tri["A"],
coef_lea_ct_an["A"], coef_lea_ct_bi["A"], coef_lea_ct_tri["A"]))
# Exportation des coefficients :
library(openxlsx)
write.xlsx(coef_lea, file = "coef_tot.xlsx")
coef_lea
# Annual
NLS_twg_an<-nls(data=dados_an, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = .0012,
c = 140,
Base=0.1,
p=2,
A = .7), control=list(maxiter=5000))
predNLS_twg_an<-predict(NLS_twg_an,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Biennial
NLS_twg_bi<-nls(data=dados_bi, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = .0001,
c = 120,
Base=.05,
p=3,
A = 0.1),
control = nls.control(minFactor = 1e-10, maxiter = 10000))
predNLS_twg_bi<-predict(NLS_twg_bi,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Triennial
NLS_twg_tri<-nls(data=dados_tri, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 360,
b = .0001,
c = 100,
Base=0.01,
p=3,
A = 0.1), control=list(maxiter=5000))
predNLS_twg_tri<-predict(NLS_twg_tri,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Control_an
NLS_twg_ct_an<-nls(data=dados_ct_an, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = 0,
c = 100,
Base=0.1,
p=2,
A = .5), control=list(maxiter=5000))
predNLS_twg_ct_an<-predict(NLS_twg_ct_an,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Control_bi
NLS_twg_ct_bi<-nls(data=dados_ct_bi, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = 0,
c = 100,
Base=.1,
p=2,
A = .1), control=list(maxiter=5000))
predNLS_twg_ct_bi<-predict(NLS_twg_ct_bi,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
# Extraction des coeeficients :
coef_twg_an <- coef(NLS_twg_an)
coef_twg_bi <- coef(NLS_twg_bi)
coef_twg_tri <- coef(NLS_twg_tri)
coef_twg_ct_an <- coef(NLS_twg_ct_an)
coef_twg_ct_bi <- coef(NLS_twg_ct_bi)
coef_twg_ct_tri <- coef(NLS_twg_ct_tri)
# Création d'un nouveau dataframe
coef_twg <- data.frame(
Modele = c("NLS_twg_an", "NLS_twg_bi", "NLS_twg_tri",
"NLS_twg_ct_an", "NLS_twg_ct_bi", "NLS_twg_ct_tri"),
a = c(coef_twg_an["a"], coef_twg_bi["a"], coef_twg_tri["a"],
coef_twg_ct_an["a"], coef_twg_ct_bi["a"], coef_twg_ct_tri["a"]),
b = c(coef_twg_an["b"], coef_twg_bi["b"], coef_twg_tri["b"],
coef_twg_ct_an["b"], coef_twg_ct_bi["b"], coef_twg_ct_tri["b"]),
c = c(coef_twg_an["c"], coef_twg_bi["c"], coef_twg_tri["c"]),
Base = c(coef_twg_an["Base"], coef_twg_bi["Base"], coef_twg_tri["Base"],
coef_twg_ct_an["Base"], coef_twg_ct_bi["Base"], coef_twg_ct_tri["Base"]),
p = c(coef_twg_an["p"], coef_twg_bi["p"], coef_twg_tri["p"],
coef_twg_ct_an["p"], coef_twg_ct_bi["p"], coef_twg_ct_tri["p"]),
A = c(coef_twg_an["A"], coef_twg_bi["A"], coef_twg_tri["A"],
coef_twg_ct_an["A"], coef_twg_ct_bi["A"], coef_twg_ct_tri["A"]))
write.xlsx(coef_twg, file = "coef_tot.xlsx")
coef_twg
# Données brute
ggplot(dados, aes(x = date, y = total_litterfall_MgC_ha_year, color = fire_regime)) +
geom_smooth(method = "loess", span = 0.2)  +
labs(title = "Evolution de la productivité primaire totale brute",
x = "Date de collecte", y = "Productivité primaire totale (MgC_ha_year)",
color ="Regime de feu") + scale_x_date(date_breaks = "1 year",
date_labels = "%Y") + theme_classic()
library(dplyr)
library(lubridate)
library(ggplot2)
# Données brute
ggplot(dados, aes(x = date, y = total_litterfall_MgC_ha_year, color = fire_regime)) +
geom_smooth(method = "loess", span = 0.2)  +
labs(title = "Evolution de la productivité primaire totale brute",
x = "Date de collecte", y = "Productivité primaire totale (MgC_ha_year)",
color ="Regime de feu") + scale_x_date(date_breaks = "1 year",
date_labels = "%Y") + theme_classic()
# Données brute
ggplot(dados, aes(x = date, y = total, color = fire_regime)) +
geom_smooth(method = "loess", span = 0.2)  +
labs(title = "Evolution de la productivité primaire totale brute",
x = "Date de collecte", y = "Productivité primaire totale (MgC_ha_year)",
color ="Regime de feu") + scale_x_date(date_breaks = "1 year",
date_labels = "%Y") + theme_classic()
# Données brute
ggplot(dados, aes(x = date, y = total, color = fire_regime)) +
geom_smooth(method = "loess", span = 0.1)  +
labs(title = "Evolution de la productivité primaire totale brute",
x = "Date de collecte", y = "Productivité primaire totale (MgC_ha_year)",
color ="Regime de feu") + scale_x_date(date_breaks = "1 year",
date_labels = "%Y") + theme_classic()
# Données brute
ggplot(dados, aes(x = date, y = total, color = fire_regime)) +
geom_smooth(method = "loess", span = 0.1)  + geom_point() +
labs(title = "Evolution de la productivité primaire totale brute",
x = "Date de collecte", y = "Productivité primaire totale (MgC_ha_year)",
color ="Regime de feu") + scale_x_date(date_breaks = "1 year",
date_labels = "%Y") + theme_classic()
# Données brute
ggplot(dados, aes(x = date, y = total, color = fire_regime)) +
geom_smooth(method = "loess", span = 0.1)  + geom_point() +
labs(title = "Evolution de la productivité primaire totale",
x = "Date de collecte", y = "Productivité primaire totale (MgC_ha_year)",
color ="Regime de feu") + scale_x_date(date_breaks = "1 year",
date_labels = "%Y") + theme_classic()
# Données brute
ggplot(dados, aes(x = date, y = total, color = fire_regime)) +
geom_smooth(method = "loess", span = 0.1) +
labs(title = "Evolution de la productivité primaire totale",
x = "Date de collecte", y = "Productivité primaire totale (MgC_ha_year)",
color ="Regime de feu") + scale_x_date(date_breaks = "1 year",
date_labels = "%Y") + theme_classic()
View(dados_basal)
table(dados_basal$date )
table(dados_basal$date)
View(dados_basal)
View(dados_basal_2)
dados_basal$date <- as.Date(with(dados_basal, paste(year, month, day, sep = "-")), "%Y-%m-%d")
table(dados_basal$date)
table(dados_basal$plot_code)
table(dados_basal)
table(dados_basal$tree_tag)
View(dados_basal)
View(dados)
