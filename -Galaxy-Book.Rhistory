coef_twg_an <- coef(NLS_twg_an)
coef_twg_bi <- coef(NLS_twg_bi)
coef_twg_tri <- coef(NLS_twg_tri)
coef_twg_ct_an <- coef(NLS_twg_ct_an)
coef_twg_ct_bi <- coef(NLS_twg_ct_bi)
coef_twg_ct_tri <- coef(NLS_twg_ct_tri)
# Création d'un nouveau dataframe
coef_twg_reg <- data.frame(
Modele = c("NLS_twg_an", "NLS_twg_bi", "NLS_twg_tri",
"NLS_twg_ct_an", "NLS_twg_ct_bi", "NLS_twg_ct_tri"),
a = c(coef_twg_an["a"], coef_twg_bi["a"], coef_twg_tri["a"],
coef_twg_ct_an["a"], coef_twg_ct_bi["a"], coef_twg_ct_tri["a"]),
b = c(coef_twg_an["b"], coef_twg_bi["b"], coef_twg_tri["b"],
coef_twg_ct_an["b"], coef_twg_ct_bi["b"], coef_twg_ct_tri["b"]),
c = c(coef_twg_an["c"], coef_twg_bi["c"], coef_twg_tri["c"]),
Base = c(coef_twg_an["Base"], coef_twg_bi["Base"], coef_twg_tri["Base"],
coef_twg_ct_an["Base"], coef_twg_ct_bi["Base"], coef_twg_ct_tri["Base"]),
p = c(coef_twg_an["p"], coef_twg_bi["p"], coef_twg_tri["p"],
coef_twg_ct_an["p"], coef_twg_ct_bi["p"], coef_twg_ct_tri["p"]))
View(coef_twg_reg)
coef_lea_reg
ggplot(coef_lea_reg, aes(x = a, y = Modele)) +
geom_point(aes(color = "a")) +
geom_point(aes(x = b, color = "b")) +
geom_point(aes(x = c, color = "c")) +
geom_point(aes(x = Base, color = "Base")) +
geom_point(aes(x = p, color = "p")) +
scale_color_manual(values = c("a" = "red", "b" = "blue", "c" = "green", "Base" = "purple", "p" = "orange")) +
labs(title = "Coefficients des modèles NLS pour les feuilles",
x = "Valeurs des coefficients",
y = "Modèle") +
theme_minimal()
ggplot(coef_lea_reg, aes(x = Modele, y = a)) +
geom_point(aes(color = "a")) +
geom_point(aes(y = b, color = "b")) +
geom_point(aes(y = c, color = "c")) +
geom_point(aes(y = Base, color = "Base")) +
geom_point(aes(y = p, color = "p")) +
scale_color_manual(values = c("a" = "red", "b" = "blue", "c" = "green", "Base" = "purple", "p" = "orange")) +
labs(title = "Coefficients des modèles NLS pour les feuilles",
y = "Valeurs des coefficients",
x = "Modèle") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(coef_lea_reg, aes(x = Modele, y = a)) +
geom_point(aes(color = "a")) +
geom_point(aes(y = b, color = "b")) +
geom_point(aes(y = c, color = "c")) +
geom_point(aes(y = Base, color = "Base")) +
geom_point(aes(y = p, color = "p")) +
scale_color_manual(values = c("a" = "red", "b" = "blue", "c" = "green", "Base" = "purple", "p" = "orange")) +
labs(title = "Coefficients des modèles NLS pour les feuilles",
y = "Valeurs des coefficients",
x = "Modèle") +
theme_minimal() + facet_wrap(~Modele)
View(coef_lea_reg)
View(coef_tot_reg)
View(coef_lea_reg)
View(coef_tot_reg)
View(coefficients_df)
View(coef_twg_reg)
# Total Litterfall:
#Extraction des coefficients
coef_tot_an <- coef(NLS_tot_an)
coef_tot_bi <- coef(NLS_tot_bi)
coef_tot_tri <- coef(NLS_tot_tri)
coef_tot_ct_an <- coef(NLS_tot_ct_an)
coef_tot_ct_bi <- coef(NLS_tot_ct_bi)
coef_tot_ct_tri <- coef(NLS_tot_ct_tri)
# New dataframe
coef_tot_reg <- data.frame(
Modele = c("NLS_tot_an", "NLS_tot_bi", "NLS_tot_tri",
"NLS_tot_ct_an", "NLS_tot_ct_bi", "NLS_tot_ct_tri"),
a = c(coef_tot_an["a"], coef_tot_bi["a"], coef_tot_tri["a"],
coef_tot_ct_an["a"], coef_tot_ct_bi["a"], coef_tot_ct_tri["a"]),
b = c(coef_tot_an["b"], coef_tot_bi["b"], coef_tot_tri["b"],
coef_tot_ct_an["b"], coef_tot_ct_bi["b"], coef_tot_ct_tri["b"]),
c = c(coef_tot_an["c"], coef_tot_bi["c"], coef_tot_tri["c"]),
Base = c(coef_tot_an["Base"], coef_tot_bi["Base"], coef_tot_tri["Base"],
coef_tot_ct_an["Base"], coef_tot_ct_bi["Base"], coef_tot_ct_tri["Base"]),
p = c(coef_tot_an["p"], coef_tot_bi["p"], coef_tot_tri["p"],
coef_tot_ct_an["p"], coef_tot_ct_bi["p"], coef_tot_ct_tri["p"]))
# Leaves
# Extraction
coef_lea_an <- coef(NLS_lea_an)
coef_lea_bi <- coef(NLS_lea_bi)
coef_lea_tri <- coef(NLS_lea_tri)
coef_lea_ct_an <- coef(NLS_lea_ct_an)
coef_lea_ct_bi <- coef(NLS_lea_ct_bi)
coef_lea_ct_tri <- coef(NLS_lea_ct_tri)
# New dataframe
coef_lea_reg <- data.frame(
Modele = c("NLS_lea_an", "NLS_lea_bi", "NLS_lea_tri",
"NLS_lea_ct_an", "NLS_lea_ct_bi", "NLS_lea_ct_tri"),
a = c(coef_lea_an["a"], coef_lea_bi["a"], coef_lea_tri["a"],
coef_lea_ct_an["a"], coef_lea_ct_bi["a"], coef_lea_ct_tri["a"]),
b = c(coef_lea_an["b"], coef_lea_bi["b"], coef_lea_tri["b"],
coef_lea_ct_an["b"], coef_lea_ct_bi["b"], coef_lea_ct_tri["b"]),
c = c(coef_lea_an["c"], coef_lea_bi["c"], coef_lea_tri["c"]),
Base = c(coef_lea_an["Base"], coef_lea_bi["Base"], coef_lea_tri["Base"],
coef_lea_ct_an["Base"], coef_lea_ct_bi["Base"], coef_lea_ct_tri["Base"]),
p = c(coef_lea_an["p"], coef_lea_bi["p"], coef_lea_tri["p"],
coef_lea_ct_an["p"], coef_lea_ct_bi["p"], coef_lea_ct_tri["p"]))
# Twigs
# Extraction :
coef_twg_an <- coef(NLS_twg_an)
coef_twg_bi <- coef(NLS_twg_bi)
coef_twg_tri <- coef(NLS_twg_tri)
coef_twg_ct_an <- coef(NLS_twg_ct_an)
coef_twg_ct_bi <- coef(NLS_twg_ct_bi)
coef_twg_ct_tri <- coef(NLS_twg_ct_tri)
# New dataframe
coef_twg_reg <- data.frame(
Modele = c("NLS_twg_an", "NLS_twg_bi", "NLS_twg_tri",
"NLS_twg_ct_an", "NLS_twg_ct_bi", "NLS_twg_ct_tri"),
a = c(coef_twg_an["a"], coef_twg_bi["a"], coef_twg_tri["a"],
coef_twg_ct_an["a"], coef_twg_ct_bi["a"], coef_twg_ct_tri["a"]),
b = c(coef_twg_an["b"], coef_twg_bi["b"], coef_twg_tri["b"],
coef_twg_ct_an["b"], coef_twg_ct_bi["b"], coef_twg_ct_tri["b"]),
c = c(coef_twg_an["c"], coef_twg_bi["c"], coef_twg_tri["c"]),
Base = c(coef_twg_an["Base"], coef_twg_bi["Base"], coef_twg_tri["Base"],
coef_twg_ct_an["Base"], coef_twg_ct_bi["Base"], coef_twg_ct_tri["Base"]),
p = c(coef_twg_an["p"], coef_twg_bi["p"], coef_twg_tri["p"],
coef_twg_ct_an["p"], coef_twg_ct_bi["p"], coef_twg_ct_tri["p"]))
coef_twg_an <- coef(NLS_twg_an)
coef_twg_bi <- coef(NLS_twg_bi)
coef_twg_tri <- coef(NLS_twg_tri)
coef_twg_ct_an <- coef(NLS_twg_ct_an)
coef_twg_ct_bi <- coef(NLS_twg_ct_bi)
coef_twg_ct_tri <- coef(NLS_twg_ct_tri)
coef_twg_reg <- data.frame(
Modele = c("NLS_twg_an", "NLS_twg_bi", "NLS_twg_tri",
"NLS_twg_ct_an", "NLS_twg_ct_bi", "NLS_twg_ct_tri"),
a = c(coef_twg_an["a"], coef_twg_bi["a"], coef_twg_tri["a"],
coef_twg_ct_an["a"], coef_twg_ct_bi["a"], coef_twg_ct_tri["a"]),
b = c(coef_twg_an["b"], coef_twg_bi["b"], coef_twg_tri["b"],
coef_twg_ct_an["b"], coef_twg_ct_bi["b"], coef_twg_ct_tri["b"]),
c = c(coef_twg_an["c"], coef_twg_bi["c"], coef_twg_tri["c"]),
Base = c(coef_twg_an["Base"], coef_twg_bi["Base"], coef_twg_tri["Base"],
coef_twg_ct_an["Base"], coef_twg_ct_bi["Base"], coef_twg_ct_tri["Base"]),
p = c(coef_twg_an["p"], coef_twg_bi["p"], coef_twg_tri["p"],
coef_twg_ct_an["p"], coef_twg_ct_bi["p"], coef_twg_ct_tri["p"]))
source("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git/5_TestStats.R")
source("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git/5_TestStats.R")
source("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git/5_TestStats.R")
source("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git/5_TestStats.R")
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP") #GalaxyBook
source("1_Standardisation.R")
getwd()
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Dados") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP") #GalaxyBook
source("1_Standardisation.R")
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Dados") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") #GalaxyBook
source("1_Standardisation.R")
getwd()
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Dados") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") #GalaxyBook
source("1_Standardisation.R")
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") #GalaxyBook
source("1_Standardisation.R")
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Dados") # AMAP
dir.exists("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git")
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") #GalaxyBook
source("1_Standardisation.R")
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git")
source("1_Standardisation.R")
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git"")
names(dados)[8:14] <- c("leaves", "twigs", "flower",
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git")
source("1_Standardisation.R")
getwd()
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Dados") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("1_Standardisation.R")
getwd()
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("1_Standardisation.R")
source("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git/1_Standardisation.R")
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git/1_Standardisation.R")
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Dados") #GalaxyBook
library(dplyr)
library(ggplot2)
dados_basal <- read.csv("ESA_basal_area.csv", header = TRUE, sep = ",", dec =".")
getwd()
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git/1_Standardisation.R")
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git/1_Standardisation.R")
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git/1_Standardisation.R")
source("1_Standardisation.R")
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("1_Standardisation.R")
getwd()
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("2_Composition.R")
getwd()
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("1_Standardisation.R")
getwd()
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("2_Composition.R")
getwd()
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("3_ Saisonalite.R")
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("3_ Saisonalite.R")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                          5/ Test Statistiques                                 ----
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
getwd()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                          5/ Test Statistiques                                 ----
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
getwd()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                          5/ Test Statistiques                                 ----
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
getwd()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                          5/ Test Statistiques                                 ----
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("4_Modelisation.R")
getwd()
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("3_ Saisonalite.R")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                          5/ Test Statistiques                                 ----
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
getwd()
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("4_Modelisation.R")
library(dplyr)
library(ggplot2)
source("4_Modelisation.R")
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("4_Modelisation.R")
library(lubridate)
library(dplyr)
library(ade4)
library(lme4)
library(ggplot2)
library(gridExtra)
setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git")
library(lubridate)
library(dplyr)
library(ade4)
library(lme4)
library(ggplot2)
library(gridExtra)
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("1_Standardisation.R")
source("2_Composition.R")
source("3_ Saisonalite.R")
source("4_Modelisation.R")
source("5_TestStats.R")
library(lubridate)
library(dplyr)
library(ade4)
library(lme4)
library(ggplot2)
library(gridExtra)
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("1_Standardisation.R")
source("2_Composition.R")
library(lubridate)
library(dplyr)
library(ade4)
library(lme4)
library(ggplot2)
library(gridExtra)
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("5_TestStats.R")
library(lubridate)
library(dplyr)
library(ade4)
library(lme4)
library(ggplot2)
library(gridExtra)
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("5_TestStats.R")
library(lubridate)
library(dplyr)
library(ade4)
library(lme4)
library(ggplot2)
library(gridExtra)
#setwd("C:/Users/distincarvalho/OneDrive/Documents/R/AMAP/Git") # AMAP
setwd("C:/Users/edoua/OneDrive/Documents/R/AMAP/Git") # Galaxybook
source("5_TestStats.R")
# Modèle :
myFunc<-function(x, a= 6, b = 0.5, c = 1.2,Base=15,p=1, A=1)
{ return( Base+A*exp(-b*x)*(sin(2*pi*(x-c)/a)+1)^p) }
# Mise en format date de x
ListDate<-seq.Date(from=min(Mean$date,na.rm=TRUE),to=max(Mean$date,na.rm=TRUE),by=1)
## Total :
with(data=Mean,plot(x=date,y=total, main = "Totall_Litterfall"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = .0005,
c = 120,
Base=0.5,
p=3, A = 1.5),col="red")
## Leaves
with(data=Mean,plot(x=date,y=leaves,main = "Leaves"))
# Mise en format date de x
ListDate<-seq.Date(from=min(Mean$date,na.rm=TRUE),to=max(Mean$date,na.rm=TRUE),by=1)
## Total :
with(data=Mean,plot(x=date,y=total, main = "Totall_Litterfall"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = .0005,
c = 120,
Base=0.5,
p=3, A = 1.5),col="red")
## Leaves
with(data=Mean,plot(x=date,y=leaves,main = "Leaves"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = .0004,
c = 110,
Base=0.5,
p=3, A = 1.5),col="darkgreen")
## Twigs
with(data=Mean,plot(x=date,y=twigs, main = "Twigs"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = .0006,
c = 120,
Base=.1,
p=2, A = 0.3),col="brown")
###### Annual ######
dados_an <- Mean[Mean$fire_regime == "annual",]
dados_an$day<-as.numeric(dados_an$date-min(dados_an$date,na.rm=TRUE))
# Total_litterfall
with(data=dados_an,plot(x=date,y=total,main = "Annual Total_litterfall"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = .0005,
c = 110,
Base=1,
p=3, A = 1),col="red", lty="dashed")
NLS_tot_an<-nls(data=dados_an, formula =
total~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=
c(a = 365,
b = .0005,
c = 110,
Base=1,
p=3, A = 1), control=list(maxiter=5000))
predNLS_tot_an<-predict(NLS_tot_an,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
lines(x=ListDate,y=predNLS_tot_an,col="cyan")
# Leaves
with(data=dados_an,plot(x=date,y=leaves,main = "Annual Leaves"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = 0.0001,
c = 120,
Base=.5,
p=3, A = 0.8),col="darkgreen", lty="dashed")
dados_an$day<-as.numeric(dados_an$date-min(dados_an$date,na.rm=TRUE))
NLS_lea_an<-nls(data=dados_an, formula =
leaves~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = 0.0001,
c = 120,
Base=.5,
p=3, A = 0.8), control=list(maxiter=5000))
predNLS_lea_an<-predict(NLS_lea_an,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
lines(x=ListDate,y=predNLS_lea_an,col="#FF007F")
# Twigs
with(data=dados_an,plot(x=date,y=twigs,main = "Annual twigs"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = .0012,
c = 140,
Base=0.1,
p=2, A = .7),col="brown", lty="dashed")
dados_an$day<-as.numeric(dados_an$date-min(dados_an$date,na.rm=TRUE))
NLS_twg_an<-nls(data=dados_an, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = .0012,
c = 140,
Base=0.1,
p=2, A = .7), control=list(maxiter=5000))
predNLS_twg_an<-predict(NLS_twg_an,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
lines(x=ListDate,y=predNLS_twg_an,col="cyan")
###### Biannual #####
dados_bi <- Mean[Mean$fire_regime == "biennial",]
# Total_litterfall
with(data=dados_bi,plot(x=date,y=total,main = "Biennial Total_litterfall"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = .0006,
c = 100,
Base=.5,
p=4,
A= .5),
col="red", lty="dashed")
dados_bi$day<-as.numeric(dados_bi$date-min(dados_bi$date,na.rm=TRUE))
NLS_tot_bi<-nls(data=dados_bi, formula =
total~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = .0006,
c = 100,
Base=.5,
p=4,
A= .5), control=list(maxiter=5000))
predNLS_tot_bi<-predict(NLS_tot_bi,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
lines(x=ListDate,y=predNLS_tot_bi,col="cyan")
# Leaves
with(data=dados_bi,plot(x=date,y=leaves,main = "Biennial Leaves"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = .0005,
c = 100,
Base=.3,
p=3, A = 1),col="darkgreen", lty="dashed")
dados_bi$day<-as.numeric(dados_bi$date-min(dados_bi$date,na.rm=TRUE))
NLS_lea_bi<-nls(data=dados_bi, formula =
leaves~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = .0005,
c = 100,
Base=.3,
p=3, A = 1),
control = nls.control(minFactor = 1e-10, maxiter = 5000))
predNLS_lea_bi<-predict(NLS_lea_bi,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
lines(x=ListDate,y=predNLS_lea_bi,col="#FF007F")
# Twigs
with(data=dados_bi,plot(x=date,y=twigs,main = "Biennial twigs"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = .0001,
c = 120,
Base=.05,
p=3, A = 0.1),col="brown", lty ="dashed")
dados_bi$day<-as.numeric(dados_bi$date-min(dados_bi$date,na.rm=TRUE))
NLS_twg_bi<-nls(data=dados_bi, formula =
twigs~myFunc(x=day, a = a, b = b, c = c, Base=Base, p=p, A=A),
start=c(a = 365,
b = .0001,
c = 120,
Base=.05,
p=3, A = 0.1),
control = nls.control(minFactor = 1e-10, maxiter = 10000))
predNLS_twg_bi<-predict(NLS_twg_bi,newdata=data.frame(day=as.numeric(ListDate-min(ListDate))))
lines(x=ListDate,y=predNLS_twg_bi,col="cyan")
###### Triannial #####
dados_tri <- Mean[Mean$fire_regime == "triennial",]
# Total_litterfall
with(data=dados_tri,plot(x=date,y=total,main = "Triennial Total_litterfall"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = .001,
c = 120,
Base=.1,
p=3, A=1),
col="red", lty="dashed")
# Regime de feu :
dados_comp <- Mean %>%
filter(fire_regime %in% c("annual","biennial","triennial"))
with(data=dados_comp, plot(x=date, y = total, main = "Fire regime Total Litterfall", col =c("annual" = "red","biennial"="green","triennial"="blue"), pch = c("annual"=1,"biennial"=2,"triennial"=3), cex = 0.5))
lines(x=ListDate,y=predNLS_tot_an,col = "red", lwd=1, lty = 1)
lines(x=ListDate,y=predNLS_tot_bi,col = "green", lwd=1, lty = 1)
lines(x=ListDate,y=predNLS_tot_tri,col = "blue", lwd=1, lty = 1)
#Extraction des coefficients
coef_tot_an <- coef(NLS_tot_an)
coef_tot_bi <- coef(NLS_tot_bi)
coef_tot_tri <- coef(NLS_tot_tri)
coef_tot_ct_an <- coef(NLS_tot_ct_an)
coef_tot_ct_bi <- coef(NLS_tot_ct_bi)
coef_tot_ct_tri <- coef(NLS_tot_ct_tri)
# Modèle :
myFunc<-function(x, a= 6, b = 0.5, c = 1.2,Base=15,p=1, A=1)
{ return( Base+A*exp(-b*x)*(sin(2*pi*(x-c)/a)+1)^p) }
# Mise en format date de x
ListDate<-seq.Date(from=min(Mean$date,na.rm=TRUE),to=max(Mean$date,na.rm=TRUE),by=1)
## Total :
with(data=Mean,plot(x=date,y=total, main = "Totall_Litterfall"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = .0005,
c = 120,
Base=0.5,
p=3, A = 1.5),col="red")
## Leaves
with(data=Mean,plot(x=date,y=leaves,main = "Leaves"))
lines(x=ListDate,y=myFunc(x=as.numeric(ListDate-min(ListDate)),
a = 365,
b = .0004,
c = 110,
Base=0.5,
p=3, A = 1.5),col="darkgreen")
